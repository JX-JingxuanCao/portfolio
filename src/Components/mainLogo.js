import React from 'react'
import { Spring, animated } from 'react-spring/renderprops'
import { interpolate } from 'flubber'

const paths = [
    'M4.08019 4.80889C4.08019 4.55062 4.06809 4.35383 4.05599 4.21854C4.03178 4.00946 3.97127 3.83728 3.91075 3.70199C3.83813 3.5544 3.85024 3.46831 3.93496 3.44371C4.05599 3.40681 4.14071 3.38221 4.17701 3.36991C4.27384 3.33302 4.39487 3.40681 4.56431 3.5667C4.73375 3.73888 4.81847 3.91107 4.81847 4.09555C4.81847 4.21854 4.81847 4.35383 4.83057 4.48912C5.07263 4.39073 5.22996 4.31693 5.31468 4.28004C5.32679 4.26774 5.35099 4.25544 5.3994 4.28004C5.45992 4.31693 5.53253 4.39073 5.62936 4.50142C5.7988 4.7351 5.84721 4.90729 5.7867 5.00568C5.72618 5.10407 5.64146 5.16556 5.52043 5.15326C5.24207 5.11637 5.01211 5.11637 4.84267 5.16556C4.84267 5.66982 4.85477 6.16178 4.85477 6.65374C5.20576 6.51845 5.42361 6.40776 5.47202 6.30937C5.52043 6.21097 5.67777 6.26017 5.94403 6.44465C6.19819 6.61684 6.30712 6.77673 6.28291 6.93661C6.2466 7.0965 6.16188 7.15799 6.02875 7.1334C5.90772 7.0842 5.60515 7.1211 5.14524 7.23179C5.08473 7.23179 5.00001 7.25639 4.87898 7.30558C4.87898 7.45317 4.87898 7.60076 4.87898 7.73605C4.91529 9.93756 4.84267 11.2167 4.66113 11.5856C4.56431 11.7332 4.47959 11.807 4.40697 11.807C4.28594 11.807 4.16491 11.684 4.04388 11.4503C3.80183 11.0322 3.71711 10.737 3.80183 10.5771C3.87444 10.4295 3.93496 10.0851 3.99547 9.56859C4.01968 8.92904 4.03178 8.2895 4.05599 7.64995C3.82603 7.77294 3.62028 7.88363 3.46295 7.96973C2.48261 8.48628 1.79275 8.92904 1.40546 9.31031C1.11499 9.60549 0.921345 9.78997 0.800316 9.83917C0.69139 9.86377 0.52195 9.69158 0.291996 9.32261C0.279893 9.29801 0.243584 9.22422 0.158864 9.12583C0.0499386 8.95364 -0.0105757 8.83065 0.00152717 8.73226C1.35705 8.14191 2.71257 7.55156 4.06809 6.96121C4.08019 6.45695 4.08019 5.9527 4.08019 5.46074C3.85024 5.58373 3.66869 5.68212 3.54767 5.75591C2.8457 6.16178 2.4221 6.51845 2.26476 6.81362C2.18004 6.96121 2.08322 6.98581 1.96219 6.92431C1.84116 6.85052 1.70803 6.69063 1.55069 6.43236C1.35705 6.06339 1.26022 5.81741 1.24812 5.69442C1.24812 5.63292 1.27233 5.60833 1.30864 5.60833C1.34494 5.60833 1.50228 5.58373 1.75644 5.53453C1.93799 5.50993 2.19214 5.19016 2.53102 4.59981C2.82149 3.97256 3.01514 3.5298 3.09986 3.28382C2.86991 3.39451 2.71257 3.48061 2.61575 3.5544C2.4221 3.71429 2.21635 3.579 1.9864 3.16083C1.86537 2.95175 1.79275 2.79186 1.76854 2.69347C1.74434 2.58278 1.75644 2.52129 1.81696 2.50899C1.92588 2.49669 2.25266 2.4106 2.82149 2.23841C3.02724 2.17692 3.24509 2.10312 3.45084 2.04163C3.52346 1.62346 3.57187 1.38978 3.58397 1.32829C3.60818 1.02081 3.55977 0.799432 3.43874 0.664144C3.31771 0.504257 3.23299 0.393567 3.20879 0.344371C3.13617 0.245979 3.14827 0.196783 3.22089 0.159886C3.24509 0.147588 3.34192 0.110691 3.53556 0.0245979C3.55977 0.012299 3.59608 0 3.64449 0C3.77762 0 3.94706 0.0983917 4.15281 0.295175C4.39487 0.541154 4.56431 0.774834 4.66113 1.00851C4.69744 1.1684 4.69744 1.37748 4.66113 1.62346C4.91529 1.51277 5.08473 1.41438 5.16945 1.32829C5.26627 1.2053 5.48412 1.25449 5.83511 1.45128C6.02875 1.54967 6.13768 1.64806 6.17399 1.73415C6.19819 1.82025 6.16188 1.89404 6.05296 1.96783C5.45992 2.26301 4.84267 2.54588 4.20122 2.80416C3.62028 3.98486 3.11196 4.83349 2.68836 5.33775C3.14827 5.16556 3.62028 4.99338 4.08019 4.80889ZM8.63087 5.03027C8.59456 4.52602 8.55825 4.23084 8.49774 4.12015C8.42512 3.94797 8.37671 3.86187 8.3404 3.83728C8.27988 3.78808 8.3404 3.67739 8.49774 3.5175C8.69138 3.34532 8.84872 3.29612 8.98185 3.38221C9.13919 3.4929 9.28442 3.64049 9.42966 3.83728C9.5991 4.05866 9.67171 4.37843 9.67171 4.79659C11.0756 4.47682 11.8139 4.28004 11.8986 4.19395C11.9834 4.10785 12.2012 4.20624 12.5764 4.50142C12.8548 4.7597 13 4.95648 13 5.10407C12.9879 5.22706 12.9153 5.37465 12.77 5.54683C12.6853 5.57143 12.5522 5.53453 12.3585 5.42384C12.177 5.31315 11.8381 5.23936 11.354 5.21476C10.9183 5.16556 10.3616 5.21476 9.68382 5.36235C9.67171 7.44087 9.65961 9.31031 9.65961 10.9461C9.65961 11.561 9.58699 12.053 9.44176 12.4342C9.29652 12.8155 9.16339 13 9.05447 13C8.94554 13 8.86082 12.8893 8.81241 12.6556C8.7882 12.4342 8.7519 11.8931 8.72769 11.0322C8.69138 10.0114 8.66718 8.2157 8.65507 5.65752C7.9168 5.81741 7.40848 5.965 7.10591 6.10028C6.91226 6.18638 6.70651 6.27247 6.51287 6.35856C6.39184 6.43236 6.30712 6.40776 6.28291 6.30937C6.2103 6.17408 6.13768 6.03879 6.07716 5.9035C6.02875 5.79281 6.00455 5.71902 6.02875 5.66982C6.04085 5.62062 6.08927 5.59603 6.16188 5.58373C6.34343 5.54683 6.52497 5.50993 6.71862 5.46074C7.34796 5.32545 7.98942 5.17786 8.63087 5.03027ZM8.98185 1.56197C9.70802 1.30369 10.0832 1.1684 10.1195 1.1684C10.2042 1.09461 10.3616 1.1315 10.5673 1.25449C10.7489 1.36518 10.8578 1.50047 10.8941 1.64806C10.9183 1.78335 10.882 1.89404 10.7973 1.95553C10.7126 2.02933 10.3374 2.17692 9.67171 2.4106C8.82451 2.66887 8.3525 2.81646 8.27988 2.82876C8.11044 2.87796 7.9289 2.91485 7.74736 2.95175C7.65054 2.97635 7.56582 2.91485 7.5053 2.79186C7.42058 2.63198 7.33586 2.44749 7.25114 2.22611C7.20273 2.10312 7.17852 2.01703 7.17852 1.95553C7.17852 1.89404 7.20273 1.85714 7.25114 1.85714C7.40848 1.85714 7.56582 1.85714 7.71105 1.85714C7.84418 1.85714 8.26778 1.75875 8.98185 1.56197Z',
    'M10.5926 5.37919L13.9139 0H12.2041L9.75618 4.23468L7.32059 0H6.32422H5.61076H4.90961V7.70636C4.90961 8.35491 4.7497 8.8763 4.41757 9.27052C4.08545 9.66474 3.64261 9.85549 3.12597 9.85549C2.57243 9.85549 2.1419 9.69017 1.83438 9.35954C1.52685 9.0289 1.37924 8.53295 1.37924 7.85896H0.0138377L0.00153673 7.90983C-0.0230651 8.91445 0.247555 9.69017 0.825699 10.2116C1.40384 10.7329 2.1665 11 3.12597 11C4.07315 11 4.8481 10.7075 5.43855 10.1098C6.02899 9.51214 6.32422 8.71098 6.32422 7.70636V1.14451L8.94432 5.37919L5.53696 10.8474H7.25909L9.78078 6.53642L12.3025 10.8474H14L10.5926 5.37919Z',
]

let current = paths[0]

export default class MainLogo extends React.Component {
    state = { path: 0 }
    toggle = () => {
        let path = this.state.path + 1
        if (path > paths.length - 1) path = 0
        this.setState(state => ({ path }))
    }
    render() {
        const { path } = this.state
        const interpolator = interpolate(current, paths[path + 1] || paths[0], {
            maxSegmentLength: 0.1
        })
        return (
            <div className="mainlogo-wrapper">
                <Spring reset native from={{ t: 0 }} to={{ t: 1.2 }}>
                    {({ t }) => (
                        <svg width="100%" viewBox="0 0 14 14">
                            <g
                                style={{ cursor: 'pointer' }}
                                fill="white"
                                fillRule="evenodd"
                                onMouseOverCapture={this.toggle}>
                                <animated.path
                                    id="path-1"
                                    d={t.interpolate(t => (current = interpolator(t)))}
                                />
                            </g>
                        </svg>
                    )}
                </Spring>
            </div>
        )
    }
}