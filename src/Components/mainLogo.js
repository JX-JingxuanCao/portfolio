import React from 'react'
import { Spring, animated } from 'react-spring/renderprops'
import { interpolate } from 'flubber'

const paths = [
    'M6.05294 2.9341L7.9508 0H6.97375L5.57496 2.30983L4.1832 0H3.61384H3.20615H2.80549V4.20347C2.80549 4.55723 2.71411 4.84162 2.52433 5.05665C2.33454 5.27168 2.08149 5.37572 1.78627 5.37572C1.46996 5.37572 1.22394 5.28555 1.04821 5.1052C0.872487 4.92486 0.788138 4.65434 0.788138 4.28671H0.00790724L0.00087813 4.31445C-0.0131801 4.86243 0.14146 5.28555 0.471828 5.56994C0.802196 5.85434 1.238 6 1.78627 6C2.32751 6 2.77035 5.84046 3.10774 5.51445C3.44514 5.18844 3.61384 4.75145 3.61384 4.20347V0.624277L5.11104 2.9341L3.16398 5.91676H4.14805L5.58902 3.56532L7.02998 5.91676H8L6.05294 2.9341Z',
    'M2.51089 2.95932C2.51089 2.80038 2.50344 2.67928 2.49599 2.59603C2.4811 2.46736 2.44386 2.3614 2.40662 2.27815C2.36193 2.18732 2.36938 2.13434 2.42151 2.11921C2.49599 2.0965 2.54813 2.08136 2.57047 2.07379C2.63005 2.05109 2.70453 2.0965 2.8088 2.19489C2.91307 2.30085 2.96521 2.40681 2.96521 2.52034C2.96521 2.59603 2.96521 2.67928 2.97266 2.76254C3.12162 2.70199 3.21844 2.65658 3.27057 2.63387C3.27802 2.6263 3.29292 2.61873 3.32271 2.63387C3.35995 2.65658 3.40464 2.70199 3.46422 2.7701C3.56849 2.91391 3.59828 3.01987 3.56104 3.08042C3.5238 3.14097 3.47167 3.17881 3.39719 3.17124C3.22589 3.14853 3.08438 3.14853 2.98011 3.17881C2.98011 3.48912 2.98755 3.79186 2.98755 4.09461C3.20354 4.01135 3.33761 3.94324 3.3674 3.88269C3.39719 3.82214 3.49401 3.85241 3.65787 3.96594C3.81427 4.0719 3.8813 4.17029 3.86641 4.26869C3.84406 4.36708 3.79193 4.40492 3.71 4.38978C3.63552 4.35951 3.44932 4.38221 3.1663 4.45033C3.12906 4.45033 3.07693 4.46547 3.00245 4.49574C3.00245 4.58657 3.00245 4.67739 3.00245 4.76064C3.02479 6.11542 2.98011 6.90255 2.86839 7.12961C2.8088 7.22044 2.75667 7.26585 2.71198 7.26585C2.6375 7.26585 2.56302 7.19016 2.48854 7.04636C2.33958 6.78903 2.28745 6.60738 2.33958 6.50899C2.38427 6.41817 2.42151 6.20624 2.45875 5.88836C2.47365 5.4948 2.4811 5.10123 2.49599 4.70766C2.35448 4.78335 2.22787 4.85147 2.13104 4.90445C1.52776 5.22233 1.10323 5.4948 0.864898 5.72942C0.686148 5.91107 0.566981 6.0246 0.492502 6.05487C0.425471 6.07001 0.3212 5.96405 0.17969 5.73699C0.172242 5.72185 0.149898 5.67644 0.0977627 5.61589C0.0307314 5.50993 -0.00650812 5.43425 0.000939794 5.3737C0.835106 5.01041 1.66927 4.64711 2.50344 4.28382C2.51089 3.97351 2.51089 3.6632 2.51089 3.36045C2.36938 3.43614 2.25766 3.49669 2.18318 3.5421C1.7512 3.79186 1.49052 4.01135 1.3937 4.193C1.34156 4.28382 1.28198 4.29896 1.2075 4.26112C1.13302 4.21571 1.0511 4.11731 0.954273 3.95837C0.835106 3.73132 0.775523 3.57994 0.768075 3.50426C0.768075 3.46641 0.782971 3.45128 0.805315 3.45128C0.827658 3.45128 0.924481 3.43614 1.08089 3.40587C1.19261 3.39073 1.34901 3.19395 1.55755 2.83065C1.7363 2.44465 1.85547 2.17219 1.90761 2.02081C1.7661 2.08893 1.66927 2.14191 1.60969 2.18732C1.49052 2.28571 1.36391 2.20246 1.2224 1.94513C1.14792 1.81646 1.10323 1.71807 1.08834 1.65752C1.07344 1.5894 1.08089 1.55156 1.11813 1.54399C1.18516 1.53642 1.38625 1.48344 1.7363 1.37748C1.86292 1.33964 1.99698 1.29423 2.1236 1.25639C2.16828 0.999054 2.19807 0.855251 2.20552 0.817408C2.22042 0.628193 2.19063 0.491958 2.11615 0.408704C2.04167 0.310312 1.98953 0.242195 1.97464 0.211921C1.92995 0.151372 1.9374 0.121097 1.98209 0.0983917C1.99698 0.0908231 2.05656 0.0681173 2.17573 0.0151372C2.19063 0.00756859 2.21297 0 2.24276 0C2.32469 0 2.42896 0.0605487 2.55557 0.181646C2.70453 0.333018 2.8088 0.476821 2.86839 0.620624C2.89073 0.719016 2.89073 0.847682 2.86839 0.999054C3.02479 0.930937 3.12906 0.870388 3.1812 0.817408C3.24078 0.741722 3.37485 0.771996 3.59083 0.893094C3.71 0.953642 3.77703 1.01419 3.79938 1.06717C3.81427 1.12015 3.79193 1.16556 3.7249 1.21097C3.35995 1.39262 2.98011 1.5667 2.58537 1.72564C2.22787 2.45222 1.91505 2.97446 1.65438 3.28477C1.9374 3.17881 2.22787 3.07285 2.51089 2.95932ZM5.3113 3.09555C5.28896 2.78524 5.26662 2.6036 5.22938 2.53548C5.18469 2.42952 5.1549 2.37654 5.13255 2.3614C5.09531 2.33113 5.13255 2.26301 5.22938 2.16462C5.34854 2.05866 5.44537 2.02838 5.52729 2.08136C5.62412 2.14948 5.71349 2.2403 5.80287 2.3614C5.90714 2.49763 5.95182 2.69442 5.95182 2.95175C6.81578 2.75497 7.2701 2.63387 7.32224 2.58089C7.37437 2.52791 7.50844 2.58846 7.73932 2.7701C7.91063 2.92904 8 3.05014 8 3.14097C7.99255 3.21665 7.94786 3.30747 7.85849 3.41343C7.80635 3.42857 7.72443 3.40587 7.60526 3.33775C7.49354 3.26963 7.285 3.22422 6.98708 3.20908C6.71896 3.17881 6.37635 3.20908 5.95927 3.29991C5.95182 4.579 5.94438 5.72942 5.94438 6.73605C5.94438 7.11447 5.89969 7.41722 5.81031 7.65184C5.72094 7.88647 5.63901 8 5.57198 8C5.50495 8 5.45281 7.93188 5.42302 7.78808C5.40813 7.65185 5.38578 7.31883 5.37089 6.78903C5.34854 6.16083 5.33365 5.05582 5.3262 3.48155C4.87188 3.57994 4.55906 3.67077 4.37287 3.75402C4.2537 3.807 4.12708 3.85998 4.00792 3.91296C3.93344 3.95837 3.8813 3.94324 3.86641 3.88269C3.82172 3.79943 3.77703 3.71618 3.73979 3.63292C3.71 3.56481 3.69511 3.51939 3.71 3.48912C3.71745 3.45885 3.74724 3.44371 3.79193 3.43614C3.90365 3.41343 4.01537 3.39073 4.13453 3.36045C4.52182 3.2772 4.91656 3.18638 5.3113 3.09555ZM5.52729 0.961211C5.97417 0.802271 6.20505 0.719016 6.2274 0.719016C6.27953 0.673605 6.37635 0.69631 6.50297 0.771996C6.61469 0.840114 6.68172 0.923368 6.70406 1.01419C6.71896 1.09745 6.69661 1.16556 6.64448 1.20341C6.59234 1.24882 6.36146 1.33964 5.95182 1.48344C5.43047 1.64238 5.14 1.73321 5.09531 1.74078C4.99104 1.77105 4.87932 1.79376 4.76761 1.81646C4.70802 1.8316 4.65589 1.79376 4.61865 1.71807C4.56651 1.61968 4.51438 1.50615 4.46224 1.36991C4.43245 1.29423 4.41755 1.24125 4.41755 1.20341C4.41755 1.16556 4.43245 1.14286 4.46224 1.14286C4.55906 1.14286 4.65589 1.14286 4.74526 1.14286C4.82719 1.14286 5.08787 1.08231 5.52729 0.961211Z'
]

let current = paths[0]

export default class MainLogo extends React.Component {
    state = { path: 0 }
    toggle = () => {
        let path = this.state.path + 1
        if (path > paths.length - 1) path = 0
        this.setState(state => ({ path }))
    }
    render() {
        const { path } = this.state
        const interpolator = interpolate(current, paths[path + 1] || paths[0], {
            maxSegmentLength: 0.1
        })
        return (
            <div className="mainlogo-wrapper">
                <Spring reset native from={{ t: 0 }} to={{ t: 1.2 }}>
                    {({ t }) => (
                        <svg width="35" height="35" viewBox="0 0 8 8">
                            <g
                                style={{ cursor: 'pointer' }}
                                fill="white"
                                fillRule="evenodd"
                                onMouseOver={this.toggle}>
                                <animated.path
                                    id="path-1"
                                    d={t.interpolate(t => (current = interpolator(t)))}
                                />
                            </g>
                        </svg>
                    )}
                </Spring>
            </div>
        )
    }
}